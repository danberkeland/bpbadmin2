# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY! 


type Location @model {
  locNick: String! @primaryKey
  locName: String!
  subs: [LocationUser] @hasMany
  zoneName: String
  addr1: String
  addr2: String
  city: String
  zip: String
  email: String
  phone: String
  
}

type User @model {
  name: String!
  email: String!
  phone: String
  sub: String! @primaryKey
  defaultLoc: Location @hasOne
  locs: [LocationUser] @hasMany
}

type LocationUser @model {
  id: ID!
  authType: Int 
  location_id: String!
  user_id: String!
  location: Location! @belongsTo(fields: ["location_id"])
  user: User! @belongsTo( fields: ["user_id"])
}


type Request @model {
  id: ID!
  name: String!
  loc: String!
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  prodName: String!
  nickName: String! @primaryKey
  packGroup: String
  packSize: Int
  doughType: String
  freezerThaw: Boolean
  eodCount: Boolean
  packGroupOrder: Int
  readyTime: Float
  bakedWhere: [String]
  wholePrice: Float
  retailPrice: Float
  isWhole: Boolean
  depends: String
  weight: Float
  descrip: String
  picURL: String
  squareID: String
  currentStock: Int
  whoCountedLast: String
  forBake: String
  bakeExtra: Int
  batchSize: Int
  preshaped: Int
  prepreshaped: Int
  updatePreDate: String
  updateFreezerDate: String
  backporchbakerypre: Int
  backporchbakery: Int
  bpbextrapre: Int
  bpbextra: Int
  bpbssetoutpre: Int
  bpbssetout: Int
  defaultInclude: Boolean
  leadTime: Int
  qbID: String
  freezerCount: Int
  freezerClosing: Int
  sheetMake: Int
  freezerNorth: Int
  freezerNorthClosing: Int
  freezerNorthFlag: String
}


type ProductBackup @model @auth(rules: [{allow: public}]) {
  id: ID!
  prodName: String!
  nickName: String! 
  packGroup: String
  packSize: Int
  doughType: String
  freezerThaw: Boolean
  eodCount: Boolean
  packGroupOrder: Int
  readyTime: Float
  bakedWhere: [String]
  wholePrice: Float
  retailPrice: Float
  isWhole: Boolean
  depends: String
  weight: Float
  descrip: String
  picURL: String
  squareID: String
  currentStock: Int
  whoCountedLast: String
  forBake: String
  bakeExtra: Int
  batchSize: Int
  preshaped: Int
  prepreshaped: Int
  updatePreDate: String
  updateFreezerDate: String
  backporchbakerypre: Int
  backporchbakery: Int
  bpbextrapre: Int
  bpbextra: Int
  bpbssetoutpre: Int
  bpbssetout: Int
  defaultInclude: Boolean
  leadTime: Int
  qbID: String
  freezerCount: Int
  freezerClosing: Int
  sheetMake: Int
  freezerNorth: Int
  freezerNorthClosing: Int
  freezerNorthFlag: String
}
